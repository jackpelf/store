---  
layout: post  
title: "xdctf-re200"  
date: 2015-10-06 00:04:04 +0800  
comments: true  
categories:   
---  
  
  
  
  
###0x00  
先执行tlscallback函数,判断是否被调试  
程序先异或解码  
  
	00401655   | 60                       | pushad                                  |  
	00401656   | BA 60 11 40 00           | mov edx,re200.401160                    |  
	0040165B   | 3E 80 32 88              | xor byte ptr ds:[edx],88                |  
	0040165F   | 42                       | inc edx                                 |  
	00401660   | 81 FA E0 11 40 00        | cmp edx,re200.4011E0                    |  
	00401666   | 75 F3                    | jnz re200.40165B                        |  
  
猜测主函数401160  
  
  
  
  
###0x01  
sub_4011eb  
判断长度是否等于19  
  
	0040118E   | 8D 8D F0 FE FF FF        | lea ecx,dword ptr ss:[ebp-110]          |  
	00401194   | 89 8D CC FE FF FF        | mov dword ptr ss:[ebp-134],ecx          |  
	0040119A   | 8B 95 CC FE FF FF        | mov edx,dword ptr ss:[ebp-134]          |  
	004011A0   | 83 C2 01                 | add edx,1                               |  
	004011A3   | 89 95 C8 FE FF FF        | mov dword ptr ss:[ebp-138],edx          | ;[ebp-138]:aaaaaabbbbbbbccccc  
	004011A9   | 8B 85 CC FE FF FF        | mov eax,dword ptr ss:[ebp-134]          |  
	004011AF   | 8A 08                    | mov cl,byte ptr ds:[eax]                |  
	004011B1   | 88 8D C7 FE FF FF        | mov byte ptr ss:[ebp-139],cl            |  
	004011B7   | 83 85 CC FE FF FF 01     | add dword ptr ss:[ebp-134],1            |  
	004011BE   | 80 BD C7 FE FF FF 00     | cmp byte ptr ss:[ebp-139],0             |  
	004011C5   | 75 E2                    | jnz re200.4011A9                        |  
	004011C7   | 8B 95 CC FE FF FF        | mov edx,dword ptr ss:[ebp-134]          |  
	004011CD   | 2B 95 C8 FE FF FF        | sub edx,dword ptr ss:[ebp-138]          | ;[ebp-138]:aaaaaabbbbbbbccccc  
	004011D3   | 89 95 C0 FE FF FF        | mov dword ptr ss:[ebp-140],edx          |  
	004011D9   | 8B 85 C0 FE FF FF        | mov eax,dword ptr ss:[ebp-140]          |  
	004011DF   | 89 85 E8 FE FF FF        | mov dword ptr ss:[ebp-118],eax          |  
	004011E5   | 81 C2 2D 08 00 00        | add edx,82D                             |  
	004011EB   | 83 BD E8 FE FF FF 19     | cmp dword ptr ss:[ebp-118],19           |  
  
40190e	input_maybe  
401a01 	print_maybe  
  
ebp-134	移动的指针  
ebp-138	第一个字符的地址  
ebp-140 长度  
ebp-118 长度  
  
  
###0x02  
判断前6个字节是否是XDCTF{  
  
004012AA | EB 0F                    | jmp re200.4012BB                    |  
004012AC | 8B 8D D0 FE FF FF        | mov ecx,dword ptr ss:[ebp-130]      |  
004012B2 | 83 C1 01                 | add ecx,1                           |  
004012B5 | 89 8D D0 FE FF FF        | mov dword ptr ss:[ebp-130],ecx      |  
004012BB | 8B 95 E0 FE FF FF        | mov edx,dword ptr ss:[ebp-120]      |  
004012C1 | 83 EA 01                 | sub edx,1                           |  
004012C4 | 39 95 D0 FE FF FF        | cmp dword ptr ss:[ebp-130],edx      |  
004012CA | 7F 3C                    | jg re200.401308                     |  
004012CC | 8B 85 D0 FE FF FF        | mov eax,dword ptr ss:[ebp-130]      |  
004012D2 | 0F BE 8C 05 70 FF FF FF  | movsx ecx,byte ptr ss:[ebp+eax-90]  |  
004012DA | 8B 95 D0 FE FF FF        | mov edx,dword ptr ss:[ebp-130]      |  
004012E0 | 0F BE 84 15 F0 FE FF FF  | movsx eax,byte ptr ss:[ebp+edx-110] |  
004012E8 | 3B C8                    | cmp ecx,eax                         |  
004012EA | 74 1A                    | je re200.401306                     |  
004012EC | 68 7C CA 40 00           | push re200.40CA7C                   | ;40CA7C:"You shall not pass!"  
004012F1 | E8 0B 07 00 00           | call re200.401A01                   |  
004012F6 | 83 C4 04                 | add esp,4                           |  
004012F9 | E8 CD 07 00 00           | call re200.401ACB                   |  
004012FE | 83 C8 FF                 | or eax,FFFFFFFF                     |  
00401301 | E9 72 03 00 00           | jmp re200.401678                    |  
00401306 | EB A4                    | jmp re200.4012AC                    |  
  
  
临时变量  
ebp-150	'XDCTF{'的长度  
ebp-149	char tmp  
ebp-148	指针指向'XDCTF{'  
ebp-144	移动的指针指向'XDCTF{'  
ebp-130 i  
ebp-120 len of XDCTF{  
ebp-110 input  
ebp-f9	}  
ebp-90	XDCTF{  
ebp-8a	0  
  
  
  
  
###0x03  
  
sub_401040( ptr to 'XDCTF_', malloc_addr, zone)  
临时变量  
ebp-18	len  
ebp-11	char tmp  
ebp-10	ptr to 'XDCTF_' + 1  
ebp-c	ptr to 'XDCTF_'	可移动指针  
ebp-8	0  
ebp-4	len  
  
逻辑如下  
XDCTF_   
减   
AAAABB    
21,-43,-43,-19,-44,-2  
  
	s = 'XDCTF_'  
	l = [21,-43,-43,-19,-44,-2]  
	for i in range(6):  
	    print chr(ord(s[i])-l[i]),  
  
  
  
  
###0x04  
  
sub_4010d0  
判断是否相同  
ebp-12	char tmp1  
ebp-11	char tmp  
ebp-10	ptr input  
ebp-c	ptr 'tUlat'  
ebp-8	ptr 'tUlat'  
ebp-4	't'  
  
  
  
  
XDCTF{Congra_tUlat$ey0u}  
  
  
###0x05  
如果需要在一个线程内部的各个函数调用都能访问、但其它线程不能访问的变量（被称为static memory local to a thread 线程局部静态变量），就需要新的机制来实现。这就是TLS  
  
linux:  
int pthread_key_create(pthread_key_t *key, void (*destructor)(void*));  
int pthread_key_delete(pthread_key_t key);  
void *pthread_getspecific(pthread_key_t key);  
int pthread_setspecific(pthread_key_t key, const void *value);  
  
windows  
TLS是Thread Local Storage，即线程局部存储的意思。实际上线程局部存储有2种，动态的和静态的。动态线程局部存储使用TlsAlloc, TlsFree, TlsSetValue和TlsGetValue这些API  
程序的start函数（Entry Point）不过是在主线程起始地址，它只是相当于我们创建其他进程时传给CreateThead()的第三个参数。所以只有当主线程创建之后才能轮到它执行的，而所以它当然就在start函数执行之前就已经被执行过了。调试器一般把默认断点设置在start函数上，结果当然就是断不到TLS回调函数  
  
__SEH_prolog4进行构建最初的 SEH 结构。  
  
