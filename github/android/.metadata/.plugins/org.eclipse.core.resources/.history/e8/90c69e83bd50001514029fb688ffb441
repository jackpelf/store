 
import java.io.IOException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Hashtable;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
 
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.cookie.Cookie;
import org.apache.http.impl.cookie.BasicClientCookie;
import org.apache.http.impl.cookie.BasicClientCookie2;
import org.apache.http.message.BasicNameValuePair;
 
//import crifanLib;
 
/**
 * @author CLi
 *
 */
public class EmulateLoginBaidu {
    static crifanLib crl;
 
    /**
     * @param args
     */
    public static void main(String[] args) {
        crl = new crifanLib();
                 
        // TODO Auto-generated method stub
        EmulateLoginBaiduUsingJava();
    }
 
    // emulate login baidu using java code  
    public static void EmulateLoginBaiduUsingJava()
    {
        boolean bLoginBaiduOk = false;
        List<Cookie> curCookieList;
         
        //step1: login baidu, got cookie BAIDUID
        String strTokenValue = "";
        boolean bGotCookieBaiduid = false;
        String strBaiduUrl = "http://www.baidu.com/";
        HttpResponse baiduResp = crl.getUrlResponse(strBaiduUrl);
         
        List<Cookie> cookieList =crl.getCurCookieStore().getCookies(); 
        crl.dbgPrintCookies(cookieList, strBaiduUrl);
        for(Cookie ck : cookieList)
        {
            String cookieName = ck.getName();
            if(cookieName.equals("BAIDUID"))
            {
                bGotCookieBaiduid = true;
            }
        }
        if (bGotCookieBaiduid)
        {
            System.out.println("正确：已找到cookie BAIDUID");
        }
        else
        {
            System.out.println("错误：没有找到cookie BAIDUID ！");
        }
         
        //step2: login, pass paras, extract resp cookie
        boolean bExtractTokenValueOK = false;
        if(bGotCookieBaiduid)
        {
            //https://passport.baidu.com/v2/api/?getapi&class=login&tpl=mn&tangram=true
            String getapiUrl = "https://passport.baidu.com/v2/api/?getapi&class=login&tpl=mn&tangram=true";
            String getApiRespHtml = crl.getUrlRespHtml(getapiUrl);
             
            //bdPass.api.params.login_token='5ab690978812b0e7fbbe1bfc267b90b3';
            //bdPass.api.params.login_token='3cf421493884e0fe9080593d05f4744f';
            Pattern tokenValP = Pattern.compile("bdPass\\.api\\.params\\.login_token='(?<tokenVal>\\w+)';");
            Matcher tokenValMatcher = tokenValP.matcher(getApiRespHtml);
            //boolean foundTokenValue = tokenValMatcher.matches();
            boolean foundTokenValue = tokenValMatcher.find();
            if(foundTokenValue)
            {
                strTokenValue = tokenValMatcher.group("tokenVal"); //3cf421493884e0fe9080593d05f4744f
                System.out.println("正确：找到 bdPass.api.params.login_token=" + strTokenValue);
                 
                bExtractTokenValueOK = true;
            }
            else
            {
                System.out.println("错误：没找到bdPass.api.params.login_token !");
            }
        }
         
        //step3: verify returned cookies
        if (bGotCookieBaiduid && bExtractTokenValueOK)
        {
            //do some workaround to makesure here cookie H_PS_PSSID not expire
            //[version: 0][name: H_PS_PSSID][value: 3359_3341_2776_1424_2981][domain: .baidu.com][path: /][expiry: null]
             
            //Date newExpiryDate = new Date("Thu Sep 17 14:22:08 CST 2043");
            //Date newExpiryDate = new Date();
            //Date newExpiryDate = new Date(2043, 9, 17);
            Date newExpiryDate = new Date(143, 9, 17);
            //Date newExpiryDate = new Date(2020, 9, 17);
            //Calendar newExpiryCalendar = new Calendar();
            //Calendar newExpiryCalendar = new GregorianCalendar();
            //Calendar newExpiryCalendar = new GregorianCalendar(2043, 9, 17);
            //Calendar newExpiryCalendar = new GregorianCalendar(2043, 9, 17, 14, 22, 8);
             
            BasicClientCookie hPsPssidCookie = null;
            //int hPsPssidCookieIdx = 0;
             
            curCookieList = crl.getCurCookieList();
            for(Cookie ck : curCookieList)
            {
                if(ck.getName().equalsIgnoreCase("H_PS_PSSID"))
                {
                    //hPsPssidCookieIdx = curCookieList.indexOf(ck);
                    hPsPssidCookie = (BasicClientCookie) ck;
                    hPsPssidCookie.setExpiryDate(newExpiryDate);
                    ck = hPsPssidCookie;
                    //break;
                }
            }
             
            crl.setCurCookieList(curCookieList);
 
             
            String staticPageUrl = "http://www.baidu.com/cache/user/html/jump.html";
 
            //List<NameValuePair> headerDict = new List<NameValuePair>();
            List<NameValuePair> postDict = new ArrayList<NameValuePair>();
            //ArrayList<NameValuePair> headerDict = new ArrayList<NameValuePair>();
            //postDict.Add("ppui_logintime", "");
            postDict.add(new BasicNameValuePair("charset", "utf-8"));
            //postDict.add(new BasicNameValuePair("codestring", ""));
            //postDict.Add("", "");
            postDict.add(new BasicNameValuePair("token", strTokenValue));
            postDict.add(new BasicNameValuePair("isPhone", "false"));
            postDict.add(new BasicNameValuePair("index", "0"));
            //postDict.add(new BasicNameValuePair("u", ""));
            //postDict.add(new BasicNameValuePair("safeflg", "0"));
            postDict.add(new BasicNameValuePair("staticpage", staticPageUrl));
            postDict.add(new BasicNameValuePair("loginType", "1"));
            postDict.add(new BasicNameValuePair("tpl", "mn"));
            postDict.add(new BasicNameValuePair("callback", "parent.bdPass.api.login._postCallback"));
             
            String strBaiduUsername = "";
            String strBaiduPassword = "";
            Scanner inputReader = new Scanner(System.in);
            System.out.println("Please Enter Your:" );
            System.out.println("Baidu Username:" );
            strBaiduUsername = inputReader.nextLine();
            System.out.println("You Entered Username=" + strBaiduUsername);
            System.out.println("Baidu Password:" );
            strBaiduPassword = inputReader.nextLine();
            System.out.println("You Entered Password=" + strBaiduPassword);
             
            postDict.add(new BasicNameValuePair("verifycode", ""));
             
            postDict.add(new BasicNameValuePair("mem_pass", "on"));
 
            String baiduMainLoginUrl = "https://passport.baidu.com/v2/api/?login";
            String loginBaiduRespHtml = crl.getUrlRespHtml(baiduMainLoginUrl, null, postDict);
